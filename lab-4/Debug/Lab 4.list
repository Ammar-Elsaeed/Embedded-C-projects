
Lab 4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000046c  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000000c  08000600  08000600  00010600  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800060c  0800060c  00010614  2**0
                  CONTENTS
  4 .ARM          00000000  0800060c  0800060c  00010614  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800060c  08000614  00010614  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800060c  0800060c  0001060c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000610  08000610  00010610  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010614  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000614  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000614  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010614  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000ba3  00000000  00000000  00010644  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000030f  00000000  00000000  000111e7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000098  00000000  00000000  000114f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000060  00000000  00000000  00011590  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000de7f  00000000  00000000  000115f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000104a  00000000  00000000  0001f46f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004fc90  00000000  00000000  000204b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00070149  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000114  00000000  00000000  0007019c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080005e8 	.word	0x080005e8

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	080005e8 	.word	0x080005e8

080001d4 <main>:
#include "GPIO.h"
#include "stm32f401xc.h"
#include "stm32f401cc_interface.h"

int main(void) {
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b088      	sub	sp, #32
 80001d8:	af00      	add	r7, sp, #0
	unsigned char lookuptable[10] = {0x3f, 0x06, 0x5b, 0x4f, 0x66,0x6d, 0x7d, 0x07, 0x7f, 0x6f};
 80001da:	4a25      	ldr	r2, [pc, #148]	; (8000270 <main+0x9c>)
 80001dc:	463b      	mov	r3, r7
 80001de:	ca07      	ldmia	r2, {r0, r1, r2}
 80001e0:	c303      	stmia	r3!, {r0, r1}
 80001e2:	801a      	strh	r2, [r3, #0]
	GPIO_Init('B', 0 , OUTPUT, PUSH_PULL);
 80001e4:	2300      	movs	r3, #0
 80001e6:	2201      	movs	r2, #1
 80001e8:	2100      	movs	r1, #0
 80001ea:	2042      	movs	r0, #66	; 0x42
 80001ec:	f000 f880 	bl	80002f0 <GPIO_Init>
	int disp_number,pin_no,delay,data,pin_data;
	for(pin_no = 0;pin_no<7;++pin_no){
 80001f0:	2300      	movs	r3, #0
 80001f2:	61bb      	str	r3, [r7, #24]
 80001f4:	e008      	b.n	8000208 <main+0x34>
		  		GPIO_Init('B', pin_no , OUTPUT, PUSH_PULL);
 80001f6:	69b9      	ldr	r1, [r7, #24]
 80001f8:	2300      	movs	r3, #0
 80001fa:	2201      	movs	r2, #1
 80001fc:	2042      	movs	r0, #66	; 0x42
 80001fe:	f000 f877 	bl	80002f0 <GPIO_Init>
	for(pin_no = 0;pin_no<7;++pin_no){
 8000202:	69bb      	ldr	r3, [r7, #24]
 8000204:	3301      	adds	r3, #1
 8000206:	61bb      	str	r3, [r7, #24]
 8000208:	69bb      	ldr	r3, [r7, #24]
 800020a:	2b06      	cmp	r3, #6
 800020c:	ddf3      	ble.n	80001f6 <main+0x22>
		  			}
  while (1) {
	  for(disp_number = 0;disp_number<10;++disp_number){
 800020e:	2300      	movs	r3, #0
 8000210:	61fb      	str	r3, [r7, #28]
 8000212:	e029      	b.n	8000268 <main+0x94>
	  		data = lookuptable[disp_number];
 8000214:	463a      	mov	r2, r7
 8000216:	69fb      	ldr	r3, [r7, #28]
 8000218:	4413      	add	r3, r2
 800021a:	781b      	ldrb	r3, [r3, #0]
 800021c:	613b      	str	r3, [r7, #16]
	  		for(pin_no = 0;pin_no<7;++pin_no){
 800021e:	2300      	movs	r3, #0
 8000220:	61bb      	str	r3, [r7, #24]
 8000222:	e011      	b.n	8000248 <main+0x74>
	  			pin_data = (data & (1<<pin_no))>>pin_no;
 8000224:	2201      	movs	r2, #1
 8000226:	69bb      	ldr	r3, [r7, #24]
 8000228:	409a      	lsls	r2, r3
 800022a:	693b      	ldr	r3, [r7, #16]
 800022c:	401a      	ands	r2, r3
 800022e:	69bb      	ldr	r3, [r7, #24]
 8000230:	fa42 f303 	asr.w	r3, r2, r3
 8000234:	60fb      	str	r3, [r7, #12]
	  			GPIO_WritePin('B', pin_no, pin_data);
 8000236:	69bb      	ldr	r3, [r7, #24]
 8000238:	68fa      	ldr	r2, [r7, #12]
 800023a:	4619      	mov	r1, r3
 800023c:	2042      	movs	r0, #66	; 0x42
 800023e:	f000 f939 	bl	80004b4 <GPIO_WritePin>
	  		for(pin_no = 0;pin_no<7;++pin_no){
 8000242:	69bb      	ldr	r3, [r7, #24]
 8000244:	3301      	adds	r3, #1
 8000246:	61bb      	str	r3, [r7, #24]
 8000248:	69bb      	ldr	r3, [r7, #24]
 800024a:	2b06      	cmp	r3, #6
 800024c:	ddea      	ble.n	8000224 <main+0x50>
	  		}
	  		for (delay = 0; delay < 500000; ++delay){}
 800024e:	2300      	movs	r3, #0
 8000250:	617b      	str	r3, [r7, #20]
 8000252:	e002      	b.n	800025a <main+0x86>
 8000254:	697b      	ldr	r3, [r7, #20]
 8000256:	3301      	adds	r3, #1
 8000258:	617b      	str	r3, [r7, #20]
 800025a:	697b      	ldr	r3, [r7, #20]
 800025c:	4a05      	ldr	r2, [pc, #20]	; (8000274 <main+0xa0>)
 800025e:	4293      	cmp	r3, r2
 8000260:	ddf8      	ble.n	8000254 <main+0x80>
	  for(disp_number = 0;disp_number<10;++disp_number){
 8000262:	69fb      	ldr	r3, [r7, #28]
 8000264:	3301      	adds	r3, #1
 8000266:	61fb      	str	r3, [r7, #28]
 8000268:	69fb      	ldr	r3, [r7, #28]
 800026a:	2b09      	cmp	r3, #9
 800026c:	ddd2      	ble.n	8000214 <main+0x40>
 800026e:	e7ce      	b.n	800020e <main+0x3a>
 8000270:	08000600 	.word	0x08000600
 8000274:	0007a11f 	.word	0x0007a11f

08000278 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000278:	b480      	push	{r7}
 800027a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800027c:	4b06      	ldr	r3, [pc, #24]	; (8000298 <SystemInit+0x20>)
 800027e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000282:	4a05      	ldr	r2, [pc, #20]	; (8000298 <SystemInit+0x20>)
 8000284:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000288:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800028c:	bf00      	nop
 800028e:	46bd      	mov	sp, r7
 8000290:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000294:	4770      	bx	lr
 8000296:	bf00      	nop
 8000298:	e000ed00 	.word	0xe000ed00

0800029c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 800029c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80002d4 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80002a0:	480d      	ldr	r0, [pc, #52]	; (80002d8 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 80002a2:	490e      	ldr	r1, [pc, #56]	; (80002dc <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 80002a4:	4a0e      	ldr	r2, [pc, #56]	; (80002e0 <LoopFillZerobss+0x1e>)
  movs r3, #0
 80002a6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002a8:	e002      	b.n	80002b0 <LoopCopyDataInit>

080002aa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002aa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002ac:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ae:	3304      	adds	r3, #4

080002b0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002b0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002b2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002b4:	d3f9      	bcc.n	80002aa <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002b6:	4a0b      	ldr	r2, [pc, #44]	; (80002e4 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 80002b8:	4c0b      	ldr	r4, [pc, #44]	; (80002e8 <LoopFillZerobss+0x26>)
  movs r3, #0
 80002ba:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002bc:	e001      	b.n	80002c2 <LoopFillZerobss>

080002be <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002be:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002c0:	3204      	adds	r2, #4

080002c2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002c2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002c4:	d3fb      	bcc.n	80002be <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80002c6:	f7ff ffd7 	bl	8000278 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80002ca:	f000 f969 	bl	80005a0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80002ce:	f7ff ff81 	bl	80001d4 <main>
  bx  lr    
 80002d2:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80002d4:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 80002d8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002dc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002e0:	08000614 	.word	0x08000614
  ldr r2, =_sbss
 80002e4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002e8:	2000001c 	.word	0x2000001c

080002ec <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80002ec:	e7fe      	b.n	80002ec <ADC_IRQHandler>
	...

080002f0 <GPIO_Init>:
 */
#include "GPIO.h"
#include "stm32f401xc.h"
#include "stm32f401cc_interface.h"
void GPIO_Init( char Port, unsigned int PIN_NO, unsigned int PIN_Dir, unsigned int Default_State)
{
 80002f0:	b480      	push	{r7}
 80002f2:	b085      	sub	sp, #20
 80002f4:	af00      	add	r7, sp, #0
 80002f6:	60b9      	str	r1, [r7, #8]
 80002f8:	607a      	str	r2, [r7, #4]
 80002fa:	603b      	str	r3, [r7, #0]
 80002fc:	4603      	mov	r3, r0
 80002fe:	73fb      	strb	r3, [r7, #15]
	//enable clock of port
	switch (Port)
 8000300:	7bfb      	ldrb	r3, [r7, #15]
 8000302:	2b41      	cmp	r3, #65	; 0x41
 8000304:	d002      	beq.n	800030c <GPIO_Init+0x1c>
 8000306:	2b42      	cmp	r3, #66	; 0x42
 8000308:	d064      	beq.n	80003d4 <GPIO_Init+0xe4>
					break;
				}//end switch
		break;
	}

}
 800030a:	e0c7      	b.n	800049c <GPIO_Init+0x1ac>
				RCC_AHB1ENR |= (0x01 <<0);
 800030c:	4b66      	ldr	r3, [pc, #408]	; (80004a8 <GPIO_Init+0x1b8>)
 800030e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000310:	4a65      	ldr	r2, [pc, #404]	; (80004a8 <GPIO_Init+0x1b8>)
 8000312:	f043 0301 	orr.w	r3, r3, #1
 8000316:	6313      	str	r3, [r2, #48]	; 0x30
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	2b03      	cmp	r3, #3
 800031c:	d83b      	bhi.n	8000396 <GPIO_Init+0xa6>
 800031e:	a201      	add	r2, pc, #4	; (adr r2, 8000324 <GPIO_Init+0x34>)
 8000320:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000324:	08000335 	.word	0x08000335
 8000328:	0800034f 	.word	0x0800034f
 800032c:	08000367 	.word	0x08000367
 8000330:	0800037f 	.word	0x0800037f
							GPIOA_MODER &= ~(0x03 << 2*PIN_NO);
 8000334:	4b5d      	ldr	r3, [pc, #372]	; (80004ac <GPIO_Init+0x1bc>)
 8000336:	681b      	ldr	r3, [r3, #0]
 8000338:	68ba      	ldr	r2, [r7, #8]
 800033a:	0052      	lsls	r2, r2, #1
 800033c:	2103      	movs	r1, #3
 800033e:	fa01 f202 	lsl.w	r2, r1, r2
 8000342:	43d2      	mvns	r2, r2
 8000344:	4611      	mov	r1, r2
 8000346:	4a59      	ldr	r2, [pc, #356]	; (80004ac <GPIO_Init+0x1bc>)
 8000348:	400b      	ands	r3, r1
 800034a:	6013      	str	r3, [r2, #0]
					break;
 800034c:	e023      	b.n	8000396 <GPIO_Init+0xa6>
							GPIOA_MODER |= (0x01 << 2*PIN_NO);
 800034e:	4b57      	ldr	r3, [pc, #348]	; (80004ac <GPIO_Init+0x1bc>)
 8000350:	681b      	ldr	r3, [r3, #0]
 8000352:	68ba      	ldr	r2, [r7, #8]
 8000354:	0052      	lsls	r2, r2, #1
 8000356:	2101      	movs	r1, #1
 8000358:	fa01 f202 	lsl.w	r2, r1, r2
 800035c:	4611      	mov	r1, r2
 800035e:	4a53      	ldr	r2, [pc, #332]	; (80004ac <GPIO_Init+0x1bc>)
 8000360:	430b      	orrs	r3, r1
 8000362:	6013      	str	r3, [r2, #0]
					break;
 8000364:	e017      	b.n	8000396 <GPIO_Init+0xa6>
							GPIOA_MODER |= (0x02 << 2*PIN_NO);
 8000366:	4b51      	ldr	r3, [pc, #324]	; (80004ac <GPIO_Init+0x1bc>)
 8000368:	681b      	ldr	r3, [r3, #0]
 800036a:	68ba      	ldr	r2, [r7, #8]
 800036c:	0052      	lsls	r2, r2, #1
 800036e:	2102      	movs	r1, #2
 8000370:	fa01 f202 	lsl.w	r2, r1, r2
 8000374:	4611      	mov	r1, r2
 8000376:	4a4d      	ldr	r2, [pc, #308]	; (80004ac <GPIO_Init+0x1bc>)
 8000378:	430b      	orrs	r3, r1
 800037a:	6013      	str	r3, [r2, #0]
					break;
 800037c:	e00b      	b.n	8000396 <GPIO_Init+0xa6>
							GPIOA_MODER |= (0x03 << 2*PIN_NO);
 800037e:	4b4b      	ldr	r3, [pc, #300]	; (80004ac <GPIO_Init+0x1bc>)
 8000380:	681b      	ldr	r3, [r3, #0]
 8000382:	68ba      	ldr	r2, [r7, #8]
 8000384:	0052      	lsls	r2, r2, #1
 8000386:	2103      	movs	r1, #3
 8000388:	fa01 f202 	lsl.w	r2, r1, r2
 800038c:	4611      	mov	r1, r2
 800038e:	4a47      	ldr	r2, [pc, #284]	; (80004ac <GPIO_Init+0x1bc>)
 8000390:	430b      	orrs	r3, r1
 8000392:	6013      	str	r3, [r2, #0]
					break;
 8000394:	bf00      	nop
 8000396:	683b      	ldr	r3, [r7, #0]
 8000398:	2b00      	cmp	r3, #0
 800039a:	d003      	beq.n	80003a4 <GPIO_Init+0xb4>
 800039c:	683b      	ldr	r3, [r7, #0]
 800039e:	2b01      	cmp	r3, #1
 80003a0:	d00c      	beq.n	80003bc <GPIO_Init+0xcc>
		break;
 80003a2:	e07b      	b.n	800049c <GPIO_Init+0x1ac>
							GPIOA_OTYPER &= ~(0x01<<PIN_NO);
 80003a4:	4b41      	ldr	r3, [pc, #260]	; (80004ac <GPIO_Init+0x1bc>)
 80003a6:	685b      	ldr	r3, [r3, #4]
 80003a8:	2101      	movs	r1, #1
 80003aa:	68ba      	ldr	r2, [r7, #8]
 80003ac:	fa01 f202 	lsl.w	r2, r1, r2
 80003b0:	43d2      	mvns	r2, r2
 80003b2:	4611      	mov	r1, r2
 80003b4:	4a3d      	ldr	r2, [pc, #244]	; (80004ac <GPIO_Init+0x1bc>)
 80003b6:	400b      	ands	r3, r1
 80003b8:	6053      	str	r3, [r2, #4]
					break;
 80003ba:	e00a      	b.n	80003d2 <GPIO_Init+0xe2>
							GPIOA_OTYPER |= (0x01<<PIN_NO);
 80003bc:	4b3b      	ldr	r3, [pc, #236]	; (80004ac <GPIO_Init+0x1bc>)
 80003be:	685b      	ldr	r3, [r3, #4]
 80003c0:	2101      	movs	r1, #1
 80003c2:	68ba      	ldr	r2, [r7, #8]
 80003c4:	fa01 f202 	lsl.w	r2, r1, r2
 80003c8:	4611      	mov	r1, r2
 80003ca:	4a38      	ldr	r2, [pc, #224]	; (80004ac <GPIO_Init+0x1bc>)
 80003cc:	430b      	orrs	r3, r1
 80003ce:	6053      	str	r3, [r2, #4]
					break;
 80003d0:	bf00      	nop
		break;
 80003d2:	e063      	b.n	800049c <GPIO_Init+0x1ac>
				RCC_AHB1ENR |= (0x01 <<1);
 80003d4:	4b34      	ldr	r3, [pc, #208]	; (80004a8 <GPIO_Init+0x1b8>)
 80003d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d8:	4a33      	ldr	r2, [pc, #204]	; (80004a8 <GPIO_Init+0x1b8>)
 80003da:	f043 0302 	orr.w	r3, r3, #2
 80003de:	6313      	str	r3, [r2, #48]	; 0x30
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	2b03      	cmp	r3, #3
 80003e4:	d83b      	bhi.n	800045e <GPIO_Init+0x16e>
 80003e6:	a201      	add	r2, pc, #4	; (adr r2, 80003ec <GPIO_Init+0xfc>)
 80003e8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80003ec:	080003fd 	.word	0x080003fd
 80003f0:	08000417 	.word	0x08000417
 80003f4:	0800042f 	.word	0x0800042f
 80003f8:	08000447 	.word	0x08000447
							GPIOB_MODER &= ~(0x03 << 2*PIN_NO);
 80003fc:	4b2c      	ldr	r3, [pc, #176]	; (80004b0 <GPIO_Init+0x1c0>)
 80003fe:	681b      	ldr	r3, [r3, #0]
 8000400:	68ba      	ldr	r2, [r7, #8]
 8000402:	0052      	lsls	r2, r2, #1
 8000404:	2103      	movs	r1, #3
 8000406:	fa01 f202 	lsl.w	r2, r1, r2
 800040a:	43d2      	mvns	r2, r2
 800040c:	4611      	mov	r1, r2
 800040e:	4a28      	ldr	r2, [pc, #160]	; (80004b0 <GPIO_Init+0x1c0>)
 8000410:	400b      	ands	r3, r1
 8000412:	6013      	str	r3, [r2, #0]
					break;
 8000414:	e023      	b.n	800045e <GPIO_Init+0x16e>
							GPIOB_MODER |= (0x01 << 2*PIN_NO);
 8000416:	4b26      	ldr	r3, [pc, #152]	; (80004b0 <GPIO_Init+0x1c0>)
 8000418:	681b      	ldr	r3, [r3, #0]
 800041a:	68ba      	ldr	r2, [r7, #8]
 800041c:	0052      	lsls	r2, r2, #1
 800041e:	2101      	movs	r1, #1
 8000420:	fa01 f202 	lsl.w	r2, r1, r2
 8000424:	4611      	mov	r1, r2
 8000426:	4a22      	ldr	r2, [pc, #136]	; (80004b0 <GPIO_Init+0x1c0>)
 8000428:	430b      	orrs	r3, r1
 800042a:	6013      	str	r3, [r2, #0]
					break;
 800042c:	e017      	b.n	800045e <GPIO_Init+0x16e>
							GPIOB_MODER |= (0x02 << 2*PIN_NO);
 800042e:	4b20      	ldr	r3, [pc, #128]	; (80004b0 <GPIO_Init+0x1c0>)
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	68ba      	ldr	r2, [r7, #8]
 8000434:	0052      	lsls	r2, r2, #1
 8000436:	2102      	movs	r1, #2
 8000438:	fa01 f202 	lsl.w	r2, r1, r2
 800043c:	4611      	mov	r1, r2
 800043e:	4a1c      	ldr	r2, [pc, #112]	; (80004b0 <GPIO_Init+0x1c0>)
 8000440:	430b      	orrs	r3, r1
 8000442:	6013      	str	r3, [r2, #0]
					break;
 8000444:	e00b      	b.n	800045e <GPIO_Init+0x16e>
							GPIOB_MODER |= (0x03 << 2*PIN_NO);
 8000446:	4b1a      	ldr	r3, [pc, #104]	; (80004b0 <GPIO_Init+0x1c0>)
 8000448:	681b      	ldr	r3, [r3, #0]
 800044a:	68ba      	ldr	r2, [r7, #8]
 800044c:	0052      	lsls	r2, r2, #1
 800044e:	2103      	movs	r1, #3
 8000450:	fa01 f202 	lsl.w	r2, r1, r2
 8000454:	4611      	mov	r1, r2
 8000456:	4a16      	ldr	r2, [pc, #88]	; (80004b0 <GPIO_Init+0x1c0>)
 8000458:	430b      	orrs	r3, r1
 800045a:	6013      	str	r3, [r2, #0]
					break;
 800045c:	bf00      	nop
 800045e:	683b      	ldr	r3, [r7, #0]
 8000460:	2b00      	cmp	r3, #0
 8000462:	d003      	beq.n	800046c <GPIO_Init+0x17c>
 8000464:	683b      	ldr	r3, [r7, #0]
 8000466:	2b01      	cmp	r3, #1
 8000468:	d00c      	beq.n	8000484 <GPIO_Init+0x194>
		break;
 800046a:	e016      	b.n	800049a <GPIO_Init+0x1aa>
							GPIOB_OTYPER &= ~(0x01<<PIN_NO);
 800046c:	4b10      	ldr	r3, [pc, #64]	; (80004b0 <GPIO_Init+0x1c0>)
 800046e:	685b      	ldr	r3, [r3, #4]
 8000470:	2101      	movs	r1, #1
 8000472:	68ba      	ldr	r2, [r7, #8]
 8000474:	fa01 f202 	lsl.w	r2, r1, r2
 8000478:	43d2      	mvns	r2, r2
 800047a:	4611      	mov	r1, r2
 800047c:	4a0c      	ldr	r2, [pc, #48]	; (80004b0 <GPIO_Init+0x1c0>)
 800047e:	400b      	ands	r3, r1
 8000480:	6053      	str	r3, [r2, #4]
					break;
 8000482:	e00a      	b.n	800049a <GPIO_Init+0x1aa>
							GPIOB_OTYPER |= (0x01<<PIN_NO);
 8000484:	4b0a      	ldr	r3, [pc, #40]	; (80004b0 <GPIO_Init+0x1c0>)
 8000486:	685b      	ldr	r3, [r3, #4]
 8000488:	2101      	movs	r1, #1
 800048a:	68ba      	ldr	r2, [r7, #8]
 800048c:	fa01 f202 	lsl.w	r2, r1, r2
 8000490:	4611      	mov	r1, r2
 8000492:	4a07      	ldr	r2, [pc, #28]	; (80004b0 <GPIO_Init+0x1c0>)
 8000494:	430b      	orrs	r3, r1
 8000496:	6053      	str	r3, [r2, #4]
					break;
 8000498:	bf00      	nop
		break;
 800049a:	bf00      	nop
}
 800049c:	bf00      	nop
 800049e:	3714      	adds	r7, #20
 80004a0:	46bd      	mov	sp, r7
 80004a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a6:	4770      	bx	lr
 80004a8:	40023800 	.word	0x40023800
 80004ac:	40020000 	.word	0x40020000
 80004b0:	40020400 	.word	0x40020400

080004b4 <GPIO_WritePin>:

unsigned char GPIO_WritePin(char Port, unsigned int PIN_NO, unsigned int Data)
{
 80004b4:	b480      	push	{r7}
 80004b6:	b087      	sub	sp, #28
 80004b8:	af00      	add	r7, sp, #0
 80004ba:	4603      	mov	r3, r0
 80004bc:	60b9      	str	r1, [r7, #8]
 80004be:	607a      	str	r2, [r7, #4]
 80004c0:	73fb      	strb	r3, [r7, #15]
	unsigned char result;
	switch(Port)
 80004c2:	7bfb      	ldrb	r3, [r7, #15]
 80004c4:	2b41      	cmp	r3, #65	; 0x41
 80004c6:	d002      	beq.n	80004ce <GPIO_WritePin+0x1a>
 80004c8:	2b42      	cmp	r3, #66	; 0x42
 80004ca:	d02d      	beq.n	8000528 <GPIO_WritePin+0x74>
 80004cc:	e05c      	b.n	8000588 <GPIO_WritePin+0xd4>
	{
		case('A'):
			if((GPIOA_MODER & (0x03 << 2*PIN_NO)) >> (2*PIN_NO) == 1)
 80004ce:	4b32      	ldr	r3, [pc, #200]	; (8000598 <GPIO_WritePin+0xe4>)
 80004d0:	681b      	ldr	r3, [r3, #0]
 80004d2:	68ba      	ldr	r2, [r7, #8]
 80004d4:	0052      	lsls	r2, r2, #1
 80004d6:	2103      	movs	r1, #3
 80004d8:	fa01 f202 	lsl.w	r2, r1, r2
 80004dc:	401a      	ands	r2, r3
 80004de:	68bb      	ldr	r3, [r7, #8]
 80004e0:	005b      	lsls	r3, r3, #1
 80004e2:	fa22 f303 	lsr.w	r3, r2, r3
 80004e6:	2b01      	cmp	r3, #1
 80004e8:	d11b      	bne.n	8000522 <GPIO_WritePin+0x6e>
			{
			     if(Data)
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	2b00      	cmp	r3, #0
 80004ee:	d00a      	beq.n	8000506 <GPIO_WritePin+0x52>
			     {
			    	 GPIOA_ODR |= (1<<PIN_NO);
 80004f0:	4b29      	ldr	r3, [pc, #164]	; (8000598 <GPIO_WritePin+0xe4>)
 80004f2:	695b      	ldr	r3, [r3, #20]
 80004f4:	2101      	movs	r1, #1
 80004f6:	68ba      	ldr	r2, [r7, #8]
 80004f8:	fa01 f202 	lsl.w	r2, r1, r2
 80004fc:	4611      	mov	r1, r2
 80004fe:	4a26      	ldr	r2, [pc, #152]	; (8000598 <GPIO_WritePin+0xe4>)
 8000500:	430b      	orrs	r3, r1
 8000502:	6153      	str	r3, [r2, #20]
 8000504:	e00a      	b.n	800051c <GPIO_WritePin+0x68>
			     }
			     else
			     {
			    	 GPIOA_ODR &= ~(1<<PIN_NO);
 8000506:	4b24      	ldr	r3, [pc, #144]	; (8000598 <GPIO_WritePin+0xe4>)
 8000508:	695b      	ldr	r3, [r3, #20]
 800050a:	2101      	movs	r1, #1
 800050c:	68ba      	ldr	r2, [r7, #8]
 800050e:	fa01 f202 	lsl.w	r2, r1, r2
 8000512:	43d2      	mvns	r2, r2
 8000514:	4611      	mov	r1, r2
 8000516:	4a20      	ldr	r2, [pc, #128]	; (8000598 <GPIO_WritePin+0xe4>)
 8000518:	400b      	ands	r3, r1
 800051a:	6153      	str	r3, [r2, #20]
			     }
				result = OK;
 800051c:	2300      	movs	r3, #0
 800051e:	75fb      	strb	r3, [r7, #23]
			}
			else
			{
				result = NOK;
			}
		break;
 8000520:	e032      	b.n	8000588 <GPIO_WritePin+0xd4>
				result = NOK;
 8000522:	2301      	movs	r3, #1
 8000524:	75fb      	strb	r3, [r7, #23]
		break;
 8000526:	e02f      	b.n	8000588 <GPIO_WritePin+0xd4>
		case('B'):
				if((GPIOB_MODER & (0x03 << 2*PIN_NO))>> (2*PIN_NO) >> (2*PIN_NO) == 1)
 8000528:	4b1c      	ldr	r3, [pc, #112]	; (800059c <GPIO_WritePin+0xe8>)
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	68ba      	ldr	r2, [r7, #8]
 800052e:	0052      	lsls	r2, r2, #1
 8000530:	2103      	movs	r1, #3
 8000532:	fa01 f202 	lsl.w	r2, r1, r2
 8000536:	401a      	ands	r2, r3
 8000538:	68bb      	ldr	r3, [r7, #8]
 800053a:	005b      	lsls	r3, r3, #1
 800053c:	40da      	lsrs	r2, r3
 800053e:	68bb      	ldr	r3, [r7, #8]
 8000540:	005b      	lsls	r3, r3, #1
 8000542:	fa22 f303 	lsr.w	r3, r2, r3
 8000546:	2b01      	cmp	r3, #1
 8000548:	d11b      	bne.n	8000582 <GPIO_WritePin+0xce>
				{
					 if(Data)
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	2b00      	cmp	r3, #0
 800054e:	d00a      	beq.n	8000566 <GPIO_WritePin+0xb2>
					 {
						 GPIOB_ODR |= (1<<PIN_NO);
 8000550:	4b12      	ldr	r3, [pc, #72]	; (800059c <GPIO_WritePin+0xe8>)
 8000552:	695b      	ldr	r3, [r3, #20]
 8000554:	2101      	movs	r1, #1
 8000556:	68ba      	ldr	r2, [r7, #8]
 8000558:	fa01 f202 	lsl.w	r2, r1, r2
 800055c:	4611      	mov	r1, r2
 800055e:	4a0f      	ldr	r2, [pc, #60]	; (800059c <GPIO_WritePin+0xe8>)
 8000560:	430b      	orrs	r3, r1
 8000562:	6153      	str	r3, [r2, #20]
 8000564:	e00a      	b.n	800057c <GPIO_WritePin+0xc8>
					 }
					 else
					 {
						 GPIOB_ODR &= ~(1<<PIN_NO);
 8000566:	4b0d      	ldr	r3, [pc, #52]	; (800059c <GPIO_WritePin+0xe8>)
 8000568:	695b      	ldr	r3, [r3, #20]
 800056a:	2101      	movs	r1, #1
 800056c:	68ba      	ldr	r2, [r7, #8]
 800056e:	fa01 f202 	lsl.w	r2, r1, r2
 8000572:	43d2      	mvns	r2, r2
 8000574:	4611      	mov	r1, r2
 8000576:	4a09      	ldr	r2, [pc, #36]	; (800059c <GPIO_WritePin+0xe8>)
 8000578:	400b      	ands	r3, r1
 800057a:	6153      	str	r3, [r2, #20]
					 }
					result = OK;
 800057c:	2300      	movs	r3, #0
 800057e:	75fb      	strb	r3, [r7, #23]
				else
				{
					result = NOK;
				}

		break;
 8000580:	e001      	b.n	8000586 <GPIO_WritePin+0xd2>
					result = NOK;
 8000582:	2301      	movs	r3, #1
 8000584:	75fb      	strb	r3, [r7, #23]
		break;
 8000586:	bf00      	nop

	}// end switch

	return result;
 8000588:	7dfb      	ldrb	r3, [r7, #23]
}
 800058a:	4618      	mov	r0, r3
 800058c:	371c      	adds	r7, #28
 800058e:	46bd      	mov	sp, r7
 8000590:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000594:	4770      	bx	lr
 8000596:	bf00      	nop
 8000598:	40020000 	.word	0x40020000
 800059c:	40020400 	.word	0x40020400

080005a0 <__libc_init_array>:
 80005a0:	b570      	push	{r4, r5, r6, lr}
 80005a2:	4d0d      	ldr	r5, [pc, #52]	; (80005d8 <__libc_init_array+0x38>)
 80005a4:	4c0d      	ldr	r4, [pc, #52]	; (80005dc <__libc_init_array+0x3c>)
 80005a6:	1b64      	subs	r4, r4, r5
 80005a8:	10a4      	asrs	r4, r4, #2
 80005aa:	2600      	movs	r6, #0
 80005ac:	42a6      	cmp	r6, r4
 80005ae:	d109      	bne.n	80005c4 <__libc_init_array+0x24>
 80005b0:	4d0b      	ldr	r5, [pc, #44]	; (80005e0 <__libc_init_array+0x40>)
 80005b2:	4c0c      	ldr	r4, [pc, #48]	; (80005e4 <__libc_init_array+0x44>)
 80005b4:	f000 f818 	bl	80005e8 <_init>
 80005b8:	1b64      	subs	r4, r4, r5
 80005ba:	10a4      	asrs	r4, r4, #2
 80005bc:	2600      	movs	r6, #0
 80005be:	42a6      	cmp	r6, r4
 80005c0:	d105      	bne.n	80005ce <__libc_init_array+0x2e>
 80005c2:	bd70      	pop	{r4, r5, r6, pc}
 80005c4:	f855 3b04 	ldr.w	r3, [r5], #4
 80005c8:	4798      	blx	r3
 80005ca:	3601      	adds	r6, #1
 80005cc:	e7ee      	b.n	80005ac <__libc_init_array+0xc>
 80005ce:	f855 3b04 	ldr.w	r3, [r5], #4
 80005d2:	4798      	blx	r3
 80005d4:	3601      	adds	r6, #1
 80005d6:	e7f2      	b.n	80005be <__libc_init_array+0x1e>
 80005d8:	0800060c 	.word	0x0800060c
 80005dc:	0800060c 	.word	0x0800060c
 80005e0:	0800060c 	.word	0x0800060c
 80005e4:	08000610 	.word	0x08000610

080005e8 <_init>:
 80005e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005ea:	bf00      	nop
 80005ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005ee:	bc08      	pop	{r3}
 80005f0:	469e      	mov	lr, r3
 80005f2:	4770      	bx	lr

080005f4 <_fini>:
 80005f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005f6:	bf00      	nop
 80005f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005fa:	bc08      	pop	{r3}
 80005fc:	469e      	mov	lr, r3
 80005fe:	4770      	bx	lr
